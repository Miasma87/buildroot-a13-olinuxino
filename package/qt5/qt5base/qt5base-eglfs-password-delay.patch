--- old/src/plugins/platforms/eglfs/qeglfsintegration.cpp	2013-10-18 15:17:34.183957907 +0200
+++ old/src/plugins/platforms/eglfs/qeglfsintegration.cpp	2013-10-18 16:45:03.122188634 +0200
@@ -69,6 +69,7 @@
 #include <qpa/qplatformcursor.h>
 
 #include <qpa/qplatforminputcontextfactory_p.h>
+#include <qpa/qplatformtheme.h>
 
 #include "qeglfscontext.h"
 
@@ -81,6 +82,18 @@
 
 QT_BEGIN_NAMESPACE
 
+
+class QPlatformThemeOlinuxino: public QPlatformTheme {
+	QVariant themeHint(ThemeHint hint) const {
+		if (hint == QPlatformTheme::PasswordMaskDelay) {
+			return QVariant(int(2000));
+		}
+		return QPlatformTheme::themeHint(hint);
+	}
+};
+
+
+
 QEglFSIntegration::QEglFSIntegration()
     : mFontDb(new QGenericUnixFontDatabase)
     , mServices(new QGenericUnixServices)
@@ -139,6 +152,20 @@
     return new QEGLPbuffer(screen->display(), QEglFSHooks::hooks()->surfaceFormatFor(surface->requestedFormat()), surface);
 }
 
+QPlatformTheme *QEglFSIntegration::createPlatformTheme(const QString &name) const
+{
+	Q_UNUSED(name);
+	QPlatformTheme *theme = new QPlatformThemeOlinuxino;
+	return theme;
+}
+
+QStringList QEglFSIntegration::themeNames() const
+{
+	QStringList themeNames;
+	themeNames << "default";
+	return themeNames;
+}
+
 QPlatformFontDatabase *QEglFSIntegration::fontDatabase() const
 {
     return mFontDb.data();
@@ -190,6 +217,8 @@
     {
     case QPlatformIntegration::ShowIsFullScreen:
         return mScreen->rootWindow() == 0;
+    case QPlatformIntegration::PasswordMaskDelay:
+        return 2000;
     default:
         return QPlatformIntegration::styleHint(hint);
     }
--- old/src/plugins/platforms/eglfs/qeglfsintegration.h	2013-12-12 19:26:41.068719202 +0100
+++ new/src/plugins/platforms/eglfs/qeglfsintegration.h	2013-12-12 19:25:13.305861321 +0100
@@ -64,6 +64,10 @@
     QPlatformOffscreenSurface *createPlatformOffscreenSurface(QOffscreenSurface *surface) const;
     QPlatformNativeInterface *nativeInterface() const;
 
+
+    QPlatformTheme *createPlatformTheme(const QString &name) const;
+    QStringList themeNames() const;
+
     QPlatformFontDatabase *fontDatabase() const;
     QPlatformServices *services() const;
